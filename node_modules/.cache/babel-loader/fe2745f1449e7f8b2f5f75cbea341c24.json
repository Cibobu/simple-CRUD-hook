{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\EditUserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nvar EditUserForm = function EditUserForm(props) {\n  var _useState = useState(props.currentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    setUser(props.currentUser);\n  }, [props]);\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        id = _event$target.id,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, id, value)));\n  };\n\n  var Validation = Yup.object().shape({\n    accountName: Yup.string() // .accountName()\n    .required(\"Required\").max(10, \"Password too long, max 10 characters\"),\n    accountNumber: Yup.string() // .accountNumber()\n    .required(\"Required\").min(8, \"Account number too short, min 8 characters\")\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      accountName: '',\n      accountNumber: '',\n      bankName: '',\n      address: '',\n      city: '',\n      country: ''\n    },\n    validationSchema: Validation,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      // this.onSubmit(values);\n      setSubmitting(true);\n      console.log(values, 'ceebbb');\n      props.addUser(values);\n      setTimeout(function (done) {\n        resetForm();\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Name\",\n      type: \"text\",\n      id: \"accountName\",\n      value: user.accountName,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Number\",\n      type: \"number\",\n      id: \"accountNumber\",\n      value: user.accountNumber,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Number\",\n      type: \"text\",\n      id: \"bankName\",\n      value: user.bankName,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Address\",\n      type: \"text\",\n      id: \"address\",\n      value: user.address,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"City\",\n      type: \"text\",\n      id: \"city\",\n      value: user.city,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Country\",\n      type: \"text\",\n      id: \"country\",\n      value: user.country,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Update account \"), \"\\xA0\", React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      variant: \"contained\",\n      onClick: function onClick() {\n        return props.setEditing(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Cancel \"))));\n  });\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["D:\\project\\react\\test-react\\src\\forms\\EditUserForm.js"],"names":["React","useState","useEffect","TextField","Button","Grid","Formik","Yup","EditUserForm","props","currentUser","user","setUser","handleInputChange","event","target","id","value","Validation","object","shape","accountName","string","required","max","accountNumber","min","bankName","address","city","country","values","setSubmitting","resetForm","console","log","addUser","setTimeout","done","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setEditing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  \n  const handleInputChange = event => {\n    const { id, value } = event.target\n\n    setUser({ ...user, [id]: value })\n  }\n\n  const Validation = Yup.object().shape({\n    accountName: Yup.string()\n        // .accountName()\n        .required(\"Required\")\n        .max(10, \"Password too long, max 10 characters\"),\n    accountNumber: Yup.string()\n        // .accountNumber()\n        .required(\"Required\")\n        .min(8, \"Account number too short, min 8 characters\"),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        accountName: '',\n        accountNumber: '',\n        bankName: '',\n        address: '',\n        city: '',\n        country: ''\n      }}\n      validationSchema={Validation}\n      onSubmit={(values , { setSubmitting, resetForm }) => {\n          // this.onSubmit(values);\n          setSubmitting(true);\n          console.log(values, 'ceebbb');\n          props.addUser(values)\n          \n          setTimeout((done) => {                                                            \n              resetForm();\n              setSubmitting(false);\n          }, 500);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting}) => (    \n      <form onSubmit={handleSubmit}>\n        <Grid container>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"Account Name\" \n            type=\"text\" \n            id=\"accountName\" \n            value={user.accountName} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"Account Number\" \n            type=\"number\" \n            id=\"accountNumber\" \n            value={user.accountNumber} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"Account Number\" \n            type=\"text\" \n            id=\"bankName\" \n            value={user.bankName} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"Address\" \n            type=\"text\" \n            id=\"address\" \n            value={user.address} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"City\" \n            type=\"text\" \n            id=\"city\" \n            value={user.city} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n            fullWidth \n            margin=\"dense\" \n            label=\"Country\" \n            type=\"text\" \n            id=\"country\" \n            value={user.country} \n            onChange={handleInputChange} \n            variant=\"outlined\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\"> Update account </Button>\n            &nbsp;\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\" onClick={() => props.setEditing(false)}> Cancel </Button>\n          </Grid>\n        </Grid>\n      </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default EditUserForm\n"]},"metadata":{},"sourceType":"module"}