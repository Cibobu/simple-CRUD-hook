{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\AddUserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nvar AddUserForm = function AddUserForm(props) {\n  var initialFormState = {\n    id: null,\n    accountName: '',\n    accountNumber: '',\n    address: '',\n    city: '',\n    country: ''\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      id: null,\n      accountName: '',\n      accountNumber: '',\n      address: '',\n      city: '',\n      country: ''\n    },\n    onSubmit: function onSubmit(user, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        console.log(\"Login\", user);\n      }, 500);\n    },\n    validationSchema: Yup.object().shape({\n      accountNumber: Yup.string().accountNumber().required(\"Required\").min(8, \"Account number too short\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (props) {\n    var user = props.user,\n        isSubmitting = props.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: function onSubmit(event) {\n        event.preventDefault();\n        if (!user.accountName || !user.accountNumber) return;\n        props.addUser(user);\n        setUser(initialFormState);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Name\",\n      type: \"text\",\n      name: \"accountName\",\n      value: user.accountName,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Number\",\n      type: \"number\",\n      name: \"accountNumber\",\n      value: user.accountNumber,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Address\",\n      type: \"text\",\n      name: \"address\",\n      value: user.address,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"City\",\n      type: \"text\",\n      name: \"city\",\n      value: user.city,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Country\",\n      type: \"text\",\n      name: \"country\",\n      value: user.country,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      variant: \"contained\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" Add new account \"))));\n  });\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["D:\\project\\react\\test-react\\src\\forms\\AddUserForm.js"],"names":["React","useState","TextField","Button","Grid","Formik","Yup","AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","user","setUser","handleInputChange","event","target","name","value","setSubmitting","setTimeout","console","log","object","shape","string","required","min","isSubmitting","preventDefault","addUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddUserForm = props => {\r\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\r\n  const [ user, setUser ] = useState(initialFormState)\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tconst { name, value } = event.target\r\n\r\n\t\tsetUser({ ...user, [name]: value })\r\n  }\r\n\r\n\treturn (\r\n\r\n    <Formik\r\n    initialValues = {{ id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }}\r\n      onSubmit={(user, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          console.log(\"Login\", user);\r\n        }, 500);\r\n          }}\r\n\r\n          validationSchema = {Yup.object().shape({\r\n            \r\n            accountNumber: Yup.string()\r\n                        .accountNumber()\r\n                        .required(\"Required\")\r\n                        .min(8, \"Account number too short\"),\r\n          })}\r\n    >\r\n        {props =>{\r\n          const{\r\n            user,\r\n            isSubmitting\r\n          } = props;\r\n\r\n          return (\r\n            <form \r\n              onSubmit={event => {\r\n                event.preventDefault()\r\n\r\n                if (!user.accountName || !user.accountNumber) return\r\n\r\n                props.addUser(user)\r\n                setUser(initialFormState)\r\n              }}\r\n            >\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <TextField \r\n                  fullWidth \r\n                  margin=\"dense\" \r\n                  label=\"Account Name\" \r\n                  type=\"text\" \r\n                  name=\"accountName\" \r\n                  value={user.accountName} \r\n                  onChange={handleInputChange} \r\n                  variant=\"outlined\" \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField \r\n                  fullWidth \r\n                  margin=\"dense\" \r\n                  label=\"Account Number\" \r\n                  type=\"number\" \r\n                  name=\"accountNumber\" \r\n                  value={user.accountNumber} \r\n                  onChange={handleInputChange} \r\n                  variant=\"outlined\" \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField \r\n                  fullWidth \r\n                  margin=\"dense\" \r\n                  label=\"Address\" \r\n                  type=\"text\" \r\n                  name=\"address\" \r\n                  value={user.address} \r\n                  onChange={handleInputChange} \r\n                  variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField \r\n                  fullWidth \r\n                  margin=\"dense\" \r\n                  label=\"City\" \r\n                  type=\"text\" \r\n                  name=\"city\" \r\n                  value={user.city} \r\n                  onChange={handleInputChange} \r\n                  variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField \r\n                  fullWidth \r\n                  margin=\"dense\" \r\n                  label=\"Country\" \r\n                  type=\"text\" \r\n                  name=\"country\" \r\n                  value={user.country} \r\n                  onChange={handleInputChange} \r\n                  variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button color=\"primary\" type=\"submit\" variant=\"contained\" disabled={isSubmitting}> Add new account </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )\r\n        }}\r\n  </Formik>\r\n\t)\r\n}\r\n\r\nexport default AddUserForm"]},"metadata":{},"sourceType":"module"}