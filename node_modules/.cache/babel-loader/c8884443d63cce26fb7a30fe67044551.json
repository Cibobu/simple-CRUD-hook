{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\AddUserForm.js\";\nimport React, { useState } from 'react';\n\nvar AddUserForm = function AddUserForm(props) {\n  var initialFormState = {\n    id: null,\n    accountName: '',\n    accountNumber: '',\n    address: '',\n    city: '',\n    country: ''\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      if (!user.accountName || !user.accountNumber || !user.address || !user.city || !user.country) return;\n      props.addUser(user);\n      setUser(initialFormState);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Account Name\",\n    type: \"text\",\n    name: \"accountName\",\n    value: user.accountName,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Account Number\",\n    type: \"number\",\n    name: \"accountNumber\",\n    value: user.accountNumber,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Address\",\n    type: \"text\",\n    name: \"address\",\n    value: user.address,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"City\",\n    type: \"text\",\n    name: \"city\",\n    value: user.city,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Country\",\n    type: \"text\",\n    name: \"country\",\n    value: user.country,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Add new account \"));\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["D:/project/react/test-react/src/forms/AddUserForm.js"],"names":["React","useState","AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","user","setUser","handleInputChange","event","target","name","value","classes","root","preventDefault","addUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n\t}\n\n\treturn (\n    <form className={classes.root} noValidate autoComplete=\"off\"\n      onSubmit={event => {\n        event.preventDefault()\n        if (!user.accountName || !user.accountNumber || !user.address || !user.city || !user.country) return\n\n        props.addUser(user)\n        setUser(initialFormState)\n      }}\n    >\n\t\t\t<TextField label=\"Account Name\" type=\"text\" name=\"accountName\" value={user.accountName} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Account Number\" type=\"number\" name=\"accountNumber\" value={user.accountNumber} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Address\" type=\"text\" name=\"address\" value={user.address} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"City\" type=\"text\" name=\"city\" value={user.city} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Country\" type=\"text\" name=\"country\" value={user.country} onChange={handleInputChange}variant=\"outlined\" />\n      <Button variant=\"contained\" color=\"primary\"> Add new account </Button>\n    </form>\n\t)\n}\n\nexport default AddUserForm\n"]},"metadata":{},"sourceType":"module"}