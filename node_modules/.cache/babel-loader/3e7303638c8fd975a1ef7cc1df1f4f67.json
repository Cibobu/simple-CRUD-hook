{"ast":null,"code":"import _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\AddUserForm.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nvar AddUserForm = function AddUserForm(props) {\n  var initialFormState = {\n    id: null,\n    accountName: '',\n    accountNumber: '',\n    address: '',\n    city: '',\n    country: ''\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var Validation = Yup.object().shape({\n    accountName: Yup.string() // .accountName()\n    .required(\"Required\").max(10, \"Password too long\"),\n    accountNumber: Yup.string() // .accountNumber()\n    .required(\"Required\").min(8, \"Account number too short\")\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      accountName: '',\n      accountNumber: ''\n    },\n    validationSchema: Validation,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      // this.onSubmit(values);\n      console.log(values);\n      setSubmitting(true);\n      setTimeout(function (done) {\n        setUser(values);\n        resetForm();\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit //   onSubmit={event => {\n      //   event.preventDefault()\n      //   if (!user.accountName || !user.accountNumber) return\n      //   props.addUser(user)\n      //   setUser(initialFormState)\n      // }\n      // }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Name\",\n      type: \"text\",\n      name: \"accountName\",\n      value: values.accountName,\n      onChange: handleChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), errors.accountName && touched.accountName ? React.createElement(\"div\", {\n      className: \"m--font-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, errors.accountName) : null), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Account Number\",\n      type: \"number\",\n      name: \"accountNumber\",\n      value: values.accountNumber,\n      onChange: handleChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), errors.accountNumber && touched.accountNumber ? React.createElement(\"div\", {\n      className: \"m--font-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, errors.accountNumber) : null), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Address\",\n      type: \"text\",\n      name: \"address\",\n      value: user.address,\n      onChange: handleChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"City\",\n      type: \"text\",\n      name: \"city\",\n      value: user.city,\n      onChange: handleChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      margin: \"dense\",\n      label: \"Country\",\n      type: \"text\",\n      name: \"country\",\n      value: user.country,\n      onChange: handleChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Add new account \"))));\n  });\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["D:\\project\\react\\test-react\\src\\forms\\AddUserForm.js"],"names":["React","useState","TextField","Button","Grid","Formik","Yup","AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","user","setUser","Validation","object","shape","string","required","max","min","values","setSubmitting","resetForm","console","log","setTimeout","done","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddUserForm = props => {\r\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\r\n  const [ user, setUser ] = useState(initialFormState)\r\n\r\n  const Validation = Yup.object().shape({\r\n    accountName: Yup.string()\r\n        // .accountName()\r\n        .required(\"Required\")\r\n        .max(10, \"Password too long\"),\r\n    accountNumber: Yup.string()\r\n        // .accountNumber()\r\n        .required(\"Required\")\r\n        .min(8, \"Account number too short\"),\r\n  });\r\n\r\n\treturn (\r\n    <Formik\r\n      initialValues={{\r\n        accountName: '',\r\n        accountNumber: ''\r\n      }}\r\n      validationSchema={Validation}\r\n      onSubmit={(values , { setSubmitting, resetForm }) => {\r\n          // this.onSubmit(values);\r\n          console.log(values);\r\n         \r\n          setSubmitting(true);\r\n          \r\n          setTimeout((done) => {                                                            \r\n              setUser(values);\r\n              resetForm();\r\n              setSubmitting(false);\r\n          }, 500);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting}) => (    \r\n        <form onSubmit={handleSubmit}\r\n        //   onSubmit={event => {\r\n        //   event.preventDefault()\r\n          \r\n        //   if (!user.accountName || !user.accountNumber) return\r\n  \r\n        //   props.addUser(user)\r\n        //   setUser(initialFormState)\r\n        // }\r\n        // }\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n            fullWidth \r\n            margin=\"dense\" \r\n            label=\"Account Name\" \r\n            type=\"text\" \r\n            name=\"accountName\" \r\n            value={values.accountName}\r\n            onChange={handleChange}\r\n            variant=\"outlined\" \r\n            />\r\n            {errors.accountName && touched.accountName ? (\r\n              <div className=\"m--font-danger\">{errors.accountName}</div>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n            fullWidth \r\n            margin=\"dense\" \r\n            label=\"Account Number\" \r\n            type=\"number\" \r\n            name=\"accountNumber\" \r\n            value={values.accountNumber} \r\n            onChange={handleChange} \r\n            variant=\"outlined\" \r\n            />\r\n            {errors.accountNumber && touched.accountNumber ? (\r\n              <div className=\"m--font-danger\">{errors.accountNumber}</div>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n            fullWidth \r\n            margin=\"dense\" \r\n            label=\"Address\" \r\n            type=\"text\" \r\n            name=\"address\" \r\n            value={user.address} \r\n            onChange={handleChange} \r\n            variant=\"outlined\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n            fullWidth \r\n            margin=\"dense\" \r\n            label=\"City\" \r\n            type=\"text\" \r\n            name=\"city\" \r\n            value={user.city} \r\n            onChange={handleChange} \r\n            variant=\"outlined\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n            fullWidth \r\n            margin=\"dense\" \r\n            label=\"Country\" \r\n            type=\"text\" \r\n            name=\"country\" \r\n            value={user.country} \r\n            onChange={handleChange} \r\n            variant=\"outlined\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\"> Add new account </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      )}\r\n    </Formik>\r\n\t)\r\n}\r\n\r\nexport default AddUserForm"]},"metadata":{},"sourceType":"module"}