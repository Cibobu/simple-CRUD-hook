{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\AddUserForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    }\n  };\n});\n\nvar AddUserForm = function AddUserForm(props) {\n  var initialFormState = {\n    id: null,\n    accountName: '',\n    accountNumber: '',\n    address: '',\n    city: '',\n    country: ''\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        id = _event$target.id,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, id, value)));\n  };\n\n  var classes = useStyles();\n  return React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      if (!user.accountName || !user.accountNumber || !user.address || !user.city || !user.country) return;\n      props.addUser(user);\n      setUser(initialFormState);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Account Name\",\n    type: \"text\",\n    id: \"accountName\",\n    value: user.accountName,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Account Number\",\n    type: \"number\",\n    id: \"accountNumber\",\n    value: user.accountNumber,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Address\",\n    type: \"text\",\n    id: \"address\",\n    value: user.address,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"City\",\n    type: \"text\",\n    id: \"city\",\n    value: user.city,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Country\",\n    type: \"text\",\n    id: \"country\",\n    value: user.country,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Add new account \"));\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["D:/project/react/test-react/src/forms/AddUserForm.js"],"names":["React","useState","makeStyles","TextField","Button","useStyles","theme","root","margin","spacing","width","AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","user","setUser","handleInputChange","event","target","value","classes","preventDefault","addUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { id, value } = event.target\n\n\t\tsetUser({ ...user, [id]: value })\n  }\n  \n  const classes = useStyles();\n\n\treturn (\n    <form className={classes.root} noValidate autoComplete=\"off\"\n      onSubmit={event => {\n        event.preventDefault()\n        if (!user.accountName || !user.accountNumber || !user.address || !user.city || !user.country) return\n\n        props.addUser(user)\n        setUser(initialFormState)\n      }}\n    >\n\t\t\t<TextField label=\"Account Name\" type=\"text\" id=\"accountName\" value={user.accountName} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Account Number\" type=\"number\" id=\"accountNumber\" value={user.accountNumber} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Address\" type=\"text\" id=\"address\" value={user.address} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"City\" type=\"text\" id=\"city\" value={user.city} onChange={handleInputChange}variant=\"outlined\" />\n      <TextField label=\"Country\" type=\"text\" id=\"country\" value={user.country} onChange={handleInputChange}variant=\"outlined\" />\n      <Button color=\"primary\"> Add new account </Button>\n      {/* <button >Add new user</button> */}\n    </form>\n\t\t\t\n\t)\n}\n\nexport default AddUserForm\n"]},"metadata":{},"sourceType":"module"}