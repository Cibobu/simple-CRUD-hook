{"ast":null,"code":"import _toConsumableArray from\"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import AddUserForm from'./forms/AddUserForm';import EditUserForm from'./forms/EditUserForm';import UserTable from'./tables/UserTable';var App=function App(){// Data\nvar usersData=[{id:1,accountName:'Tania',accountNumber:12345,address:'California',city:'Malang',country:'Indonesia'}];var initialFormState={id:null,accountName:'',accountNumber:'',address:'',city:'',country:''};// Setting state\nvar _useState=useState(usersData),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(initialFormState),_useState4=_slicedToArray(_useState3,2),currentUser=_useState4[0],setCurrentUser=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),editing=_useState6[0],setEditing=_useState6[1];// CRUD operations\nvar addUser=function addUser(user){user.id=users.length+1;setUsers([].concat(_toConsumableArray(users),[user]));};var deleteUser=function deleteUser(id){setEditing(false);setUsers(users.filter(function(user){return user.id!==id;}));};var updateUser=function updateUser(id,updatedUser){setEditing(false);setUsers(users.map(function(user){return user.id===id?updatedUser:user;}));};var editRow=function editRow(user){setEditing(true);setCurrentUser({id:user.id,accountName:user.accountName,accountNumber:user.accountNumber,address:user.address,city:user.city,country:user.country});};return React.createElement(\"div\",{className:\"container\"},React.createElement(\"h1\",null,\"CRUD App Test\"),React.createElement(\"div\",{className:\"flex-row\"},React.createElement(\"div\",{className:\"flex-large\"},editing?React.createElement(Fragment,null,React.createElement(\"h2\",null,\"Edit user\"),React.createElement(EditUserForm,{editing:editing,setEditing:setEditing,currentUser:currentUser,updateUser:updateUser})):React.createElement(Fragment,null,React.createElement(\"h2\",null,\"Add user\"),React.createElement(AddUserForm,{addUser:addUser})))),React.createElement(\"div\",{className:\"flex-row\"},React.createElement(\"div\",{className:\"flex-large\"},React.createElement(\"h2\",null,\"View users\"),React.createElement(UserTable,{users:users,editRow:editRow,deleteUser:deleteUser}))));};export default App;","map":{"version":3,"sources":["D:/project/react/test-react/src/App.js"],"names":["React","useState","Fragment","AddUserForm","EditUserForm","UserTable","App","usersData","id","accountName","accountNumber","address","city","country","initialFormState","users","setUsers","currentUser","setCurrentUser","editing","setEditing","addUser","user","length","deleteUser","filter","updateUser","updatedUser","map","editRow"],"mappings":"4TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACjB;AACA,GAAMC,CAAAA,SAAS,CAAG,CACjB,CACCC,EAAE,CAAE,CADL,CAECC,WAAW,CAAE,OAFd,CAGCC,aAAa,CAAE,KAHhB,CAICC,OAAO,CAAE,YAJV,CAKCC,IAAI,CAAE,QALP,CAMCC,OAAO,CAAE,WANV,CADiB,CAAlB,CAWA,GAAMC,CAAAA,gBAAgB,CAAG,CAAEN,EAAE,CAAE,IAAN,CAAYC,WAAW,CAAE,EAAzB,CAA6BC,aAAa,CAAE,EAA5C,CAAgDC,OAAO,CAAE,EAAzD,CAA6DC,IAAI,CAAE,EAAnE,CAAuEC,OAAO,CAAE,EAAhF,CAAzB,CAEA;AAfiB,cAgBWZ,QAAQ,CAACM,SAAD,CAhBnB,wCAgBTQ,KAhBS,eAgBFC,QAhBE,8BAiBuBf,QAAQ,CAACa,gBAAD,CAjB/B,yCAiBTG,WAjBS,eAiBIC,cAjBJ,8BAkBejB,QAAQ,CAAC,KAAD,CAlBvB,yCAkBTkB,OAlBS,eAkBAC,UAlBA,eAoBjB;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CACvBA,IAAI,CAACd,EAAL,CAAUO,KAAK,CAACQ,MAAN,CAAe,CAAzB,CACAP,QAAQ,8BAAMD,KAAN,GAAaO,IAAb,GAAR,CACA,CAHD,CAKA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAhB,EAAE,CAAI,CACxBY,UAAU,CAAC,KAAD,CAAV,CAEAJ,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAa,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACd,EAAL,GAAYA,EAAhB,EAAjB,CAAD,CAAR,CACA,CAJD,CAMA,GAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAClB,EAAD,CAAKmB,WAAL,CAAqB,CACvCP,UAAU,CAAC,KAAD,CAAV,CAEAJ,QAAQ,CAACD,KAAK,CAACa,GAAN,CAAU,SAAAN,IAAI,QAAKA,CAAAA,IAAI,CAACd,EAAL,GAAYA,EAAZ,CAAiBmB,WAAjB,CAA+BL,IAApC,EAAd,CAAD,CAAR,CACA,CAJD,CAMA,GAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAP,IAAI,CAAI,CACvBF,UAAU,CAAC,IAAD,CAAV,CAEEF,cAAc,CAAC,CACbV,EAAE,CAAEc,IAAI,CAACd,EADI,CAEbC,WAAW,CAAEa,IAAI,CAACb,WAFL,CAGbC,aAAa,CAAEY,IAAI,CAACZ,aAHP,CAIbC,OAAO,CAAEW,IAAI,CAACX,OAJD,CAKbC,IAAI,CAAEU,IAAI,CAACV,IALE,CAMbC,OAAO,CAAES,IAAI,CAACT,OAND,CAAD,CAAd,CAQF,CAXD,CAaA,MACC,4BAAK,SAAS,CAAC,WAAf,EACC,8CADD,CAEC,2BAAK,SAAS,CAAC,UAAf,EACC,2BAAK,SAAS,CAAC,YAAf,EACEM,OAAO,CACP,oBAAC,QAAD,MACC,0CADD,CAEC,oBAAC,YAAD,EACC,OAAO,CAAEA,OADV,CAEC,UAAU,CAAEC,UAFb,CAGC,WAAW,CAAEH,WAHd,CAIC,UAAU,CAAES,UAJb,EAFD,CADO,CAWP,oBAAC,QAAD,MACC,yCADD,CAEC,oBAAC,WAAD,EAAa,OAAO,CAAEL,OAAtB,EAFD,CAZF,CADD,CAFD,CAsBI,2BAAK,SAAS,CAAC,UAAf,EACE,2BAAK,SAAS,CAAC,YAAf,EACE,2CADF,CAEE,oBAAC,SAAD,EAAW,KAAK,CAAEN,KAAlB,CAAyB,OAAO,CAAEc,OAAlC,CAA2C,UAAU,CAAEL,UAAvD,EAFF,CADF,CAtBJ,CADD,CA+BA,CAlFD,CAoFA,cAAelB,CAAAA,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\nimport UserTable from './tables/UserTable'\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ \n\t\t\tid: 1, \n\t\t\taccountName: 'Tania', \n\t\t\taccountNumber: 12345, \n\t\t\taddress: 'California', \n\t\t\tcity: 'Malang', \n\t\t\tcountry: 'Indonesia' \n\t\t},\n\t]\n\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData)\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([ ...users, user ])\n\t}\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t}\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t}\n\n\tconst editRow = user => {\n\t\tsetEditing(true)\n\n    setCurrentUser({ \n      id: user.id, \n      accountName: user.accountName, \n      accountNumber: user.accountNumber,\n      address: user.address,\n      city: user.city,\n      country: user.country \n    })\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>CRUD App Test</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n        </div>\n      </div>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}