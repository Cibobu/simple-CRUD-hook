{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\EditUserForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nvar EditUserForm = function EditUserForm(props) {\n  var _useState = useState(props.currentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    setUser(props.currentUser);\n  }, [props]); // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        id = _event$target.id,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, id, value)));\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.updateUser(user.id, user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Account Name\",\n    type: \"text\",\n    id: \"accountName\",\n    value: user.accountName,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Account Number\",\n    type: \"number\",\n    id: \"accountNumber\",\n    value: user.accountNumber,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Address\",\n    type: \"text\",\n    id: \"address\",\n    value: user.address,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"City\",\n    type: \"text\",\n    id: \"city\",\n    value: user.city,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Country\",\n    type: \"text\",\n    id: \"country\",\n    value: user.country,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \" Update account \"), React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return props.setEditing(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Cancel \"))));\n};\n\nexport default EditUserForm;","map":{"version":3,"sources":["D:/project/react/test-react/src/forms/EditUserForm.js"],"names":["React","useState","useEffect","TextField","Button","Grid","EditUserForm","props","currentUser","user","setUser","handleInputChange","event","target","id","value","preventDefault","updateUser","accountName","accountNumber","address","city","country","setEditing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { id, value } = event.target\n\n    setUser({ ...user, [id]: value })\n  }\n\n  return (\n    <form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\n\t\t\t\tprops.updateUser(user.id, user)\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container spacing={3}>\n        <Grid item xs={2}>\n          <TextField label=\"Account Name\" type=\"text\" id=\"accountName\" value={user.accountName} onChange={handleInputChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField label=\"Account Number\" type=\"number\" id=\"accountNumber\" value={user.accountNumber} onChange={handleInputChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField label=\"Address\" type=\"text\" id=\"address\" value={user.address} onChange={handleInputChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField label=\"City\" type=\"text\" id=\"city\" value={user.city} onChange={handleInputChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField label=\"Country\" type=\"text\" id=\"country\" value={user.country} onChange={handleInputChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item xs={12}>\n          <Button color=\"primary\" type=\"submit\" variant=\"contained\"> Update account </Button>\n          <Button color=\"primary\" type=\"submit\" variant=\"contained\" onClick={() => props.setEditing(false)}> Cancel </Button>\n        </Grid>\n      </Grid>\n\t\t</form>\n  )\n}\n\nexport default EditUserForm\n"]},"metadata":{},"sourceType":"module"}