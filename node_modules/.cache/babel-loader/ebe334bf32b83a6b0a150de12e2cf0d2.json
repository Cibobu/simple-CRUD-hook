{"ast":null,"code":"import _defineProperty from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\project\\\\react\\\\test-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\project\\\\react\\\\test-react\\\\src\\\\forms\\\\AddUserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nvar AddUserForm = function AddUserForm(props) {\n  var initialFormState = {\n    id: null,\n    accountName: '',\n    accountNumber: '',\n    address: '',\n    city: '',\n    country: ''\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n  };\n\n  var SignupSchema = Yup.object().shape({\n    accountName: Yup.string().accountName().required(\"Required\").max(10, \"Password too long\"),\n    accountNumber: Yup.string().accountNumber().required(\"Required\").min(8, \"Account number too short\")\n  });\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      if (!user.accountName || !user.accountNumber) return;\n      props.addUser(user);\n      setUser(initialFormState);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"dense\",\n    label: \"Account Name\",\n    type: \"text\",\n    name: \"accountName\",\n    value: user.accountName,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"dense\",\n    label: \"Account Number\",\n    type: \"number\",\n    name: \"accountNumber\",\n    value: user.accountNumber,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"dense\",\n    label: \"Address\",\n    type: \"text\",\n    name: \"address\",\n    value: user.address,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"dense\",\n    label: \"City\",\n    type: \"text\",\n    name: \"city\",\n    value: user.city,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"dense\",\n    label: \"Country\",\n    type: \"text\",\n    name: \"country\",\n    value: user.country,\n    onChange: handleInputChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" Add new account \"))));\n};\n\nexport default AddUserForm;","map":{"version":3,"sources":["D:\\project\\react\\test-react\\src\\forms\\AddUserForm.js"],"names":["React","useState","TextField","Button","Grid","Formik","Yup","AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","user","setUser","handleInputChange","event","target","name","value","SignupSchema","object","shape","string","required","max","min","preventDefault","addUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddUserForm = props => {\r\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\r\n  const [ user, setUser ] = useState(initialFormState)\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tconst { name, value } = event.target\r\n\r\n\t\tsetUser({ ...user, [name]: value })\r\n  }\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    accountName: Yup.string()\r\n        .accountName()\r\n        .required(\"Required\")\r\n        .max(10, \"Password too long\"),\r\n    accountNumber: Yup.string()\r\n        .accountNumber()\r\n        .required(\"Required\")\r\n        .min(8, \"Account number too short\"),\r\n  });\r\n\r\n\treturn (\r\n    <form \r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n\r\n        if (!user.accountName || !user.accountNumber) return\r\n\r\n        props.addUser(user)\r\n        setUser(initialFormState)\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <TextField \r\n          fullWidth \r\n          margin=\"dense\" \r\n          label=\"Account Name\" \r\n          type=\"text\" \r\n          name=\"accountName\" \r\n          value={user.accountName} \r\n          onChange={handleInputChange} \r\n          variant=\"outlined\" \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField \r\n          fullWidth \r\n          margin=\"dense\" \r\n          label=\"Account Number\" \r\n          type=\"number\" \r\n          name=\"accountNumber\" \r\n          value={user.accountNumber} \r\n          onChange={handleInputChange} \r\n          variant=\"outlined\" \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField \r\n          fullWidth \r\n          margin=\"dense\" \r\n          label=\"Address\" \r\n          type=\"text\" \r\n          name=\"address\" \r\n          value={user.address} \r\n          onChange={handleInputChange} \r\n          variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField \r\n          fullWidth \r\n          margin=\"dense\" \r\n          label=\"City\" \r\n          type=\"text\" \r\n          name=\"city\" \r\n          value={user.city} \r\n          onChange={handleInputChange} \r\n          variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField \r\n          fullWidth \r\n          margin=\"dense\" \r\n          label=\"Country\" \r\n          type=\"text\" \r\n          name=\"country\" \r\n          value={user.country} \r\n          onChange={handleInputChange} \r\n          variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button color=\"primary\" type=\"submit\" variant=\"contained\"> Add new account </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n\t)\r\n}\r\n\r\nexport default AddUserForm"]},"metadata":{},"sourceType":"module"}