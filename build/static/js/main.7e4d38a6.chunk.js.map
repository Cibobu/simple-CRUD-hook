{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","accountName","accountNumber","address","city","country","useState","user","setUser","handleInputChange","event","target","name","value","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","className","UserTable","users","length","map","key","editRow","deleteUser","colSpan","App","setUsers","setCurrentUser","editing","updatedUser","filter","ReactDOM","render","document","getElementById"],"mappings":"qNAqCeA,EAnCK,SAAAC,GACnB,IAAMC,EAAmB,CAAEC,GAAI,KAAMC,YAAa,GAAIC,cAAe,GAAIC,QAAS,GAAIC,KAAM,GAAIC,QAAS,IAD7E,EAEFC,mBAASP,GAFP,mBAEpBQ,EAFoB,KAEdC,EAFc,KAItBC,EAAoB,SAAAC,GAAU,IAAD,EACVA,EAAMC,OAAtBC,EAD0B,EAC1BA,KAAMC,EADoB,EACpBA,MAEdL,EAAQ,eAAKD,EAAN,eAAaK,EAAOC,MAG5B,OACC,0BACCC,SAAU,SAAAJ,GACTA,EAAMK,iBACDR,EAAKN,aAAgBM,EAAKL,eAAkBK,EAAKJ,SAAYI,EAAKH,MAASG,EAAKF,UAErFP,EAAMkB,QAAQT,GACdC,EAAQT,MAGT,+CACA,2BAAOkB,KAAK,OAAOL,KAAK,cAAcC,MAAON,EAAKN,YAAaiB,SAAUT,IACzE,iDACA,2BAAOQ,KAAK,SAASL,KAAK,gBAAgBC,MAAON,EAAKL,cAAegB,SAAUT,IAC/E,0CACA,2BAAOQ,KAAK,OAAOL,KAAK,UAAUC,MAAON,EAAKJ,QAASe,SAAUT,IACjE,uCACA,2BAAOQ,KAAK,OAAOL,KAAK,OAAOC,MAAON,EAAKH,KAAMc,SAAUT,IAC3D,0CACA,2BAAOQ,KAAK,OAAOL,KAAK,UAAUC,MAAON,EAAKF,QAASa,SAAUT,IACjE,qDCaYU,EA3CM,SAAArB,GAAU,IAAD,EACFQ,mBAASR,EAAMsB,aADb,mBACpBb,EADoB,KACdC,EADc,KAG5Ba,qBACE,WACEb,EAAQV,EAAMsB,eAEhB,CAAEtB,IAIJ,IAAMW,EAAoB,SAAAC,GAAU,IAAD,EACTA,EAAMC,OAAtBC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MAEdL,EAAQ,eAAKD,EAAN,eAAaK,EAAOC,MAG7B,OACE,0BACEC,SAAU,SAAAJ,GACRA,EAAMK,iBAENjB,EAAMwB,WAAWf,EAAKP,GAAIO,KAG5B,+CACH,2BAAOU,KAAK,OAAOL,KAAK,cAAcC,MAAON,EAAKN,YAAaiB,SAAUT,IACzE,iDACA,2BAAOQ,KAAK,SAASL,KAAK,gBAAgBC,MAAON,EAAKL,cAAegB,SAAUT,IAC/E,0CACA,2BAAOQ,KAAK,OAAOL,KAAK,UAAUC,MAAON,EAAKJ,QAASe,SAAUT,IACjE,uCACA,2BAAOQ,KAAK,OAAOL,KAAK,OAAOC,MAAON,EAAKH,KAAMc,SAAUT,IAC3D,0CACA,2BAAOQ,KAAK,OAAOL,KAAK,UAAUC,MAAON,EAAKF,QAASa,SAAUT,IAC9D,kDACA,4BAAQc,QAAS,kBAAMzB,EAAM0B,YAAW,IAAQC,UAAU,uBAA1D,YCYSC,EAhDG,SAAA5B,GAAK,OACrB,+BACE,+BACE,4BACE,4CACA,+CACA,uCACA,oCACA,uCACA,yCAGJ,+BACGA,EAAM6B,MAAMC,OAAS,EACpB9B,EAAM6B,MAAME,KAAI,SAAAtB,GAAI,OAClB,wBAAIuB,IAAKvB,EAAKP,IACZ,4BAAKO,EAAKN,aACV,4BAAKM,EAAKL,eACV,4BAAKK,EAAKJ,SACV,4BAAKI,EAAKH,MACV,4BAAKG,EAAKF,SACV,4BACE,4BACEkB,QAAS,WACPzB,EAAMiC,QAAQxB,IAEhBkB,UAAU,uBAJZ,QAQA,4BACEF,QAAS,kBAAMzB,EAAMkC,WAAWzB,EAAKP,KACrCyB,UAAU,uBAFZ,eAUN,4BACE,wBAAIQ,QAAS,GAAb,gBC8CKC,EApFH,WAEX,IAFiB,EAgBW5B,mBAdV,CACjB,CACCN,GAAI,EACJC,YAAa,QACbC,cAAe,MACfC,QAAS,aACTC,KAAM,SACNC,QAAS,eATM,mBAgBTsB,EAhBS,KAgBFQ,EAhBE,OAiBuB7B,mBAJf,CAAEN,GAAI,KAAMC,YAAa,GAAIC,cAAe,GAAIC,QAAS,GAAIC,KAAM,GAAIC,QAAS,KAbxF,mBAiBTe,EAjBS,KAiBIgB,EAjBJ,OAkBe9B,oBAAS,GAlBxB,mBAkBT+B,EAlBS,KAkBAb,EAlBA,KAmDjB,OACC,yBAAKC,UAAU,aACd,6CACA,yBAAKA,UAAU,YACd,yBAAKA,UAAU,cACbY,EACA,kBAAC,WAAD,KACC,yCACA,kBAAC,EAAD,CACCA,QAASA,EACTb,WAAYA,EACZJ,YAAaA,EACbE,WA/BY,SAACtB,EAAIsC,GACvBd,GAAW,GAEXW,EAASR,EAAME,KAAI,SAAAtB,GAAI,OAAKA,EAAKP,KAAOA,EAAKsC,EAAc/B,UAgCvD,kBAAC,WAAD,KACC,wCACA,kBAAC,EAAD,CAAaS,QAhDH,SAAAT,GACfA,EAAKP,GAAK2B,EAAMC,OAAS,EACzBO,EAAS,GAAD,mBAAMR,GAAN,CAAapB,WAmDjB,yBAAKkB,UAAU,YACb,yBAAKA,UAAU,cACb,0CACA,kBAAC,EAAD,CAAWE,MAAOA,EAAOI,QAvClB,SAAAxB,GACfiB,GAAW,GAETY,EAAe,CACbpC,GAAIO,EAAKP,GACTC,YAAaM,EAAKN,YAClBC,cAAeK,EAAKL,cACpBC,QAASI,EAAKJ,QACdC,KAAMG,EAAKH,KACXC,QAASE,EAAKF,WA8BiC2B,WAnDjC,SAAAhC,GAClBwB,GAAW,GAEXW,EAASR,EAAMY,QAAO,SAAAhC,GAAI,OAAIA,EAAKP,KAAOA,aC7B5CwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7e4d38a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif (!user.accountName || !user.accountNumber || !user.address || !user.city || !user.country) return\n\n\t\t\t\tprops.addUser(user)\n\t\t\t\tsetUser(initialFormState)\n\t\t\t}}\n\t\t>\n\t\t\t<label>Account Name</label>\n\t\t\t<input type=\"text\" name=\"accountName\" value={user.accountName} onChange={handleInputChange} />\n\t\t\t<label>Account Number</label>\n\t\t\t<input type=\"number\" name=\"accountNumber\" value={user.accountNumber} onChange={handleInputChange} />\n\t\t\t<label>Address</label>\n\t\t\t<input type=\"text\" name=\"address\" value={user.address} onChange={handleInputChange} />\n\t\t\t<label>City</label>\n\t\t\t<input type=\"text\" name=\"city\" value={user.city} onChange={handleInputChange} />\n\t\t\t<label>Country</label>\n\t\t\t<input type=\"text\" name=\"country\" value={user.country} onChange={handleInputChange} />\n\t\t\t<button>Add new account</button>\n\t\t</form>\n\t)\n}\n\nexport default AddUserForm\n","import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateUser(user.id, user)\n      }}\n    >\n      <label>Account Name</label>\n\t\t\t<input type=\"text\" name=\"accountName\" value={user.accountName} onChange={handleInputChange} />\n\t\t\t<label>Account Number</label>\n\t\t\t<input type=\"number\" name=\"accountNumber\" value={user.accountNumber} onChange={handleInputChange} />\n\t\t\t<label>Address</label>\n\t\t\t<input type=\"text\" name=\"address\" value={user.address} onChange={handleInputChange} />\n\t\t\t<label>City</label>\n\t\t\t<input type=\"text\" name=\"city\" value={user.city} onChange={handleInputChange} />\n\t\t\t<label>Country</label>\n\t\t\t<input type=\"text\" name=\"country\" value={user.country} onChange={handleInputChange} />\n      <button>Update account</button>\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditUserForm\n","import React from 'react'\n\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th>Account Name</th>\n        <th>Username Number</th>\n        <th>Address</th>\n        <th>City</th>\n        <th>Country</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.accountName}</td>\n            <td>{user.accountNumber}</td>\n            <td>{user.address}</td>\n            <td>{user.city}</td>\n            <td>{user.country}</td>\n            <td>\n              <button\n                onClick={() => {\n                  props.editRow(user)\n                }}\n                className=\"button muted-button\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => props.deleteUser(user.id)}\n                className=\"button muted-button\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={6}>No users</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n\nexport default UserTable\n","import React, { useState, Fragment } from 'react'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\nimport UserTable from './tables/UserTable'\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ \n\t\t\tid: 1, \n\t\t\taccountName: 'Tania', \n\t\t\taccountNumber: 12345, \n\t\t\taddress: 'California', \n\t\t\tcity: 'Malang', \n\t\t\tcountry: 'Indonesia' \n\t\t},\n\t]\n\n\tconst initialFormState = { id: null, accountName: '', accountNumber: '', address: '', city: '', country: '' }\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData)\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([ ...users, user ])\n\t}\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t}\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t}\n\n\tconst editRow = user => {\n\t\tsetEditing(true)\n\n    setCurrentUser({ \n      id: user.id, \n      accountName: user.accountName, \n      accountNumber: user.accountNumber,\n      address: user.address,\n      city: user.city,\n      country: user.country \n    })\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>CRUD App Test</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n        </div>\n      </div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}